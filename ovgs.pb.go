// Copyright (c) 2023 Arista Networks, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not
// use this file except in compliance with the License. You may obtain a copy of
// the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations under
// the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.11.3
// source: ovgs.proto

package ovgs

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserRole int32

const (
	UserRole_USER_ROLE_UNSPECIFIED UserRole = 0
	// Internal to the service, used by the vendor to invoke support related operations
	// Read write to everything
	UserRole_USER_ROLE_SUPPORT UserRole = 1
	// Read write to everything
	UserRole_USER_ROLE_ADMIN UserRole = 2
	// Read everything, write certs and serials
	UserRole_USER_ROLE_ASSIGNER UserRole = 3
	// Read only
	UserRole_USER_ROLE_REQUESTOR UserRole = 4
)

// Enum value maps for UserRole.
var (
	UserRole_name = map[int32]string{
		0: "USER_ROLE_UNSPECIFIED",
		1: "USER_ROLE_SUPPORT",
		2: "USER_ROLE_ADMIN",
		3: "USER_ROLE_ASSIGNER",
		4: "USER_ROLE_REQUESTOR",
	}
	UserRole_value = map[string]int32{
		"USER_ROLE_UNSPECIFIED": 0,
		"USER_ROLE_SUPPORT":     1,
		"USER_ROLE_ADMIN":       2,
		"USER_ROLE_ASSIGNER":    3,
		"USER_ROLE_REQUESTOR":   4,
	}
)

func (x UserRole) Enum() *UserRole {
	p := new(UserRole)
	*p = x
	return p
}

func (x UserRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserRole) Descriptor() protoreflect.EnumDescriptor {
	return file_ovgs_proto_enumTypes[0].Descriptor()
}

func (UserRole) Type() protoreflect.EnumType {
	return &file_ovgs_proto_enumTypes[0]
}

func (x UserRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserRole.Descriptor instead.
func (UserRole) EnumDescriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{0}
}

type AccountType int32

const (
	AccountType_ACCOUNT_TYPE_UNSPECIFIED AccountType = 0
	// USER represents a user account, tied to their identity, as specified by the
	// authentication mechanism provided
	AccountType_ACCOUNT_TYPE_USER AccountType = 1
	// SERVICE_ACCOUNT provides an identity that is not tied to a human/user and is intended for
	// programmatic access from any app/service (say the bootstrap server) to the ovgs service
	// This can typically be achieved by creating service accounts (with some name), and issuing
	// long lived tokens against that service account name
	AccountType_ACCOUNT_TYPE_SERVICE_ACCOUNT AccountType = 2
)

// Enum value maps for AccountType.
var (
	AccountType_name = map[int32]string{
		0: "ACCOUNT_TYPE_UNSPECIFIED",
		1: "ACCOUNT_TYPE_USER",
		2: "ACCOUNT_TYPE_SERVICE_ACCOUNT",
	}
	AccountType_value = map[string]int32{
		"ACCOUNT_TYPE_UNSPECIFIED":     0,
		"ACCOUNT_TYPE_USER":            1,
		"ACCOUNT_TYPE_SERVICE_ACCOUNT": 2,
	}
)

func (x AccountType) Enum() *AccountType {
	p := new(AccountType)
	*p = x
	return p
}

func (x AccountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountType) Descriptor() protoreflect.EnumDescriptor {
	return file_ovgs_proto_enumTypes[1].Descriptor()
}

func (AccountType) Type() protoreflect.EnumType {
	return &file_ovgs_proto_enumTypes[1]
}

func (x AccountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountType.Descriptor instead.
func (AccountType) EnumDescriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{1}
}

// User/service accounts are assumed to have been created by some mechanism outside of
// ovgs, but are known to it. This service only deals with the assignment of roles to
// these existing user/service accounts.
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Username or Service Account name.
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// User account type
	UserType AccountType `protobuf:"varint,2,opt,name=user_type,json=userType,proto3,enum=ovgs.v1.AccountType" json:"user_type,omitempty"`
	// org_id = "org-" + org name. A calling User will know their org_id.
	OrgId string `protobuf:"bytes,3,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	// Role of the user, one of ADMIN, ASSIGNER or REQUESTOR.
	UserRole UserRole `protobuf:"varint,4,opt,name=user_role,json=userRole,proto3,enum=ovgs.v1.UserRole" json:"user_role,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetUserType() AccountType {
	if x != nil {
		return x.UserType
	}
	return AccountType_ACCOUNT_TYPE_UNSPECIFIED
}

func (x *User) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *User) GetUserRole() UserRole {
	if x != nil {
		return x.UserRole
	}
	return UserRole_USER_ROLE_UNSPECIFIED
}

// A component uniquely identifies a part which can be queried by this service
type Component struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ien is the vendor's IANA Enterprise Number.
	Ien          string `protobuf:"bytes,1,opt,name=ien,proto3" json:"ien,omitempty"`
	SerialNumber string `protobuf:"bytes,2,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
}

func (x *Component) Reset() {
	*x = Component{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Component) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Component) ProtoMessage() {}

func (x *Component) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Component.ProtoReflect.Descriptor instead.
func (*Component) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{1}
}

func (x *Component) GetIen() string {
	if x != nil {
		return x.Ien
	}
	return ""
}

func (x *Component) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

// The group heirarchy is rooted at the root group (group_id = org_id)
type CreateGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Parent group ID, it could be org ID or a group ID.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Description of the group.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateGroupRequest) Reset() {
	*x = CreateGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRequest) ProtoMessage() {}

func (x *CreateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{2}
}

func (x *CreateGroupRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CreateGroupRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *CreateGroupResponse) Reset() {
	*x = CreateGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupResponse) ProtoMessage() {}

func (x *CreateGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateGroupResponse) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{3}
}

func (x *CreateGroupResponse) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type GetGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *GetGroupRequest) Reset() {
	*x = GetGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupRequest) ProtoMessage() {}

func (x *GetGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupRequest.ProtoReflect.Descriptor instead.
func (*GetGroupRequest) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{4}
}

func (x *GetGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type GetGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Group id
	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// list of certificate ids associated with the group.
	CertIds []string `protobuf:"bytes,2,rep,name=cert_ids,json=certIds,proto3" json:"cert_ids,omitempty"`
	// list of components in the group.
	Components []*Component `protobuf:"bytes,3,rep,name=components,proto3" json:"components,omitempty"`
	// list of users in the group.
	Users []*User `protobuf:"bytes,4,rep,name=users,proto3" json:"users,omitempty"`
	// list of group ids that are children of this group.
	ChildGroupIds []string `protobuf:"bytes,5,rep,name=child_group_ids,json=childGroupIds,proto3" json:"child_group_ids,omitempty"`
	// Description of group
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *GetGroupResponse) Reset() {
	*x = GetGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupResponse) ProtoMessage() {}

func (x *GetGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupResponse.ProtoReflect.Descriptor instead.
func (*GetGroupResponse) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{5}
}

func (x *GetGroupResponse) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetGroupResponse) GetCertIds() []string {
	if x != nil {
		return x.CertIds
	}
	return nil
}

func (x *GetGroupResponse) GetComponents() []*Component {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *GetGroupResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *GetGroupResponse) GetChildGroupIds() []string {
	if x != nil {
		return x.ChildGroupIds
	}
	return nil
}

func (x *GetGroupResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DeleteGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *DeleteGroupRequest) Reset() {
	*x = DeleteGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupRequest) ProtoMessage() {}

func (x *DeleteGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteGroupRequest) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type DeleteGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteGroupResponse) Reset() {
	*x = DeleteGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupResponse) ProtoMessage() {}

func (x *DeleteGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupResponse.ProtoReflect.Descriptor instead.
func (*DeleteGroupResponse) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{7}
}

// Roles are assigned to users in the context of a group, giving them
// certain permissions (as defined by that role) within the group.
// A User can assign a role to another User only if it has a role with
// equal or higher privileges. The following assignments are possible -
// Caller Role    |   Assignable Roles
//
//	ADMIN         |    ADMIN, ASSIGNER, REQUESTOR
//	ASSIGNER      |    ASSIGNER, REQUESTOR
//	REQUESTOR     |    NA (cannot assign roles)
type AddUserRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// username or service account name
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// user account type
	UserType AccountType `protobuf:"varint,2,opt,name=user_type,json=userType,proto3,enum=ovgs.v1.AccountType" json:"user_type,omitempty"`
	// org_id = "org-" + org name
	OrgId string `protobuf:"bytes,3,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	// Group id to assign to the user.  Must be set.
	GroupId string `protobuf:"bytes,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// role of the user, one of ADMIN, ASSIGNER or REQUESTOR.
	UserRole UserRole `protobuf:"varint,5,opt,name=user_role,json=userRole,proto3,enum=ovgs.v1.UserRole" json:"user_role,omitempty"`
}

func (x *AddUserRoleRequest) Reset() {
	*x = AddUserRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserRoleRequest) ProtoMessage() {}

func (x *AddUserRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserRoleRequest.ProtoReflect.Descriptor instead.
func (*AddUserRoleRequest) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{8}
}

func (x *AddUserRoleRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddUserRoleRequest) GetUserType() AccountType {
	if x != nil {
		return x.UserType
	}
	return AccountType_ACCOUNT_TYPE_UNSPECIFIED
}

func (x *AddUserRoleRequest) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *AddUserRoleRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *AddUserRoleRequest) GetUserRole() UserRole {
	if x != nil {
		return x.UserRole
	}
	return UserRole_USER_ROLE_UNSPECIFIED
}

type AddUserRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddUserRoleResponse) Reset() {
	*x = AddUserRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserRoleResponse) ProtoMessage() {}

func (x *AddUserRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserRoleResponse.ProtoReflect.Descriptor instead.
func (*AddUserRoleResponse) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{9}
}

type RemoveUserRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// username or service account name
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// user account type
	UserType AccountType `protobuf:"varint,2,opt,name=user_type,json=userType,proto3,enum=ovgs.v1.AccountType" json:"user_type,omitempty"`
	// org_id = "org-" + org name
	OrgId   string `protobuf:"bytes,3,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	GroupId string `protobuf:"bytes,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *RemoveUserRoleRequest) Reset() {
	*x = RemoveUserRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserRoleRequest) ProtoMessage() {}

func (x *RemoveUserRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserRoleRequest.ProtoReflect.Descriptor instead.
func (*RemoveUserRoleRequest) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{10}
}

func (x *RemoveUserRoleRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RemoveUserRoleRequest) GetUserType() AccountType {
	if x != nil {
		return x.UserType
	}
	return AccountType_ACCOUNT_TYPE_UNSPECIFIED
}

func (x *RemoveUserRoleRequest) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *RemoveUserRoleRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type RemoveUserRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveUserRoleResponse) Reset() {
	*x = RemoveUserRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserRoleResponse) ProtoMessage() {}

func (x *RemoveUserRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserRoleResponse.ProtoReflect.Descriptor instead.
func (*RemoveUserRoleResponse) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{11}
}

type GetUserRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// username or service account name
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// user type
	UserType AccountType `protobuf:"varint,2,opt,name=user_type,json=userType,proto3,enum=ovgs.v1.AccountType" json:"user_type,omitempty"`
	// org_id = "org-" + org name
	OrgId string `protobuf:"bytes,3,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
}

func (x *GetUserRoleRequest) Reset() {
	*x = GetUserRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRoleRequest) ProtoMessage() {}

func (x *GetUserRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRoleRequest.ProtoReflect.Descriptor instead.
func (*GetUserRoleRequest) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{12}
}

func (x *GetUserRoleRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetUserRoleRequest) GetUserType() AccountType {
	if x != nil {
		return x.UserType
	}
	return AccountType_ACCOUNT_TYPE_UNSPECIFIED
}

func (x *GetUserRoleRequest) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

type GetUserRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mapping from a group to user's role in that group
	Groups map[string]UserRole `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=ovgs.v1.UserRole"`
}

func (x *GetUserRoleResponse) Reset() {
	*x = GetUserRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRoleResponse) ProtoMessage() {}

func (x *GetUserRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRoleResponse.ProtoReflect.Descriptor instead.
func (*GetUserRoleResponse) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{13}
}

func (x *GetUserRoleResponse) GetGroups() map[string]UserRole {
	if x != nil {
		return x.Groups
	}
	return nil
}

// Domain certs contain PDCs assigned to groups.
type CreateDomainCertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId          string               `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	CertificateDer   []byte               `protobuf:"bytes,2,opt,name=certificate_der,json=certificateDer,proto3" json:"certificate_der,omitempty"`
	RevocationChecks bool                 `protobuf:"varint,3,opt,name=revocation_checks,json=revocationChecks,proto3" json:"revocation_checks,omitempty"`
	ExpiryTime       *timestamp.Timestamp `protobuf:"bytes,4,opt,name=expiry_time,json=expiryTime,proto3" json:"expiry_time,omitempty"`
}

func (x *CreateDomainCertRequest) Reset() {
	*x = CreateDomainCertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDomainCertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDomainCertRequest) ProtoMessage() {}

func (x *CreateDomainCertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDomainCertRequest.ProtoReflect.Descriptor instead.
func (*CreateDomainCertRequest) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{14}
}

func (x *CreateDomainCertRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *CreateDomainCertRequest) GetCertificateDer() []byte {
	if x != nil {
		return x.CertificateDer
	}
	return nil
}

func (x *CreateDomainCertRequest) GetRevocationChecks() bool {
	if x != nil {
		return x.RevocationChecks
	}
	return false
}

func (x *CreateDomainCertRequest) GetExpiryTime() *timestamp.Timestamp {
	if x != nil {
		return x.ExpiryTime
	}
	return nil
}

type CreateDomainCertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CertId string `protobuf:"bytes,1,opt,name=cert_id,json=certId,proto3" json:"cert_id,omitempty"`
}

func (x *CreateDomainCertResponse) Reset() {
	*x = CreateDomainCertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDomainCertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDomainCertResponse) ProtoMessage() {}

func (x *CreateDomainCertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDomainCertResponse.ProtoReflect.Descriptor instead.
func (*CreateDomainCertResponse) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{15}
}

func (x *CreateDomainCertResponse) GetCertId() string {
	if x != nil {
		return x.CertId
	}
	return ""
}

type GetDomainCertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CertId string `protobuf:"bytes,1,opt,name=cert_id,json=certId,proto3" json:"cert_id,omitempty"`
}

func (x *GetDomainCertRequest) Reset() {
	*x = GetDomainCertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDomainCertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDomainCertRequest) ProtoMessage() {}

func (x *GetDomainCertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDomainCertRequest.ProtoReflect.Descriptor instead.
func (*GetDomainCertRequest) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{16}
}

func (x *GetDomainCertRequest) GetCertId() string {
	if x != nil {
		return x.CertId
	}
	return ""
}

type GetDomainCertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CertId           string               `protobuf:"bytes,1,opt,name=cert_id,json=certId,proto3" json:"cert_id,omitempty"`
	GroupId          string               `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	CertificateDer   []byte               `protobuf:"bytes,3,opt,name=certificate_der,json=certificateDer,proto3" json:"certificate_der,omitempty"`
	RevocationChecks bool                 `protobuf:"varint,4,opt,name=revocation_checks,json=revocationChecks,proto3" json:"revocation_checks,omitempty"`
	ExpiryTime       *timestamp.Timestamp `protobuf:"bytes,5,opt,name=expiry_time,json=expiryTime,proto3" json:"expiry_time,omitempty"`
}

func (x *GetDomainCertResponse) Reset() {
	*x = GetDomainCertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDomainCertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDomainCertResponse) ProtoMessage() {}

func (x *GetDomainCertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDomainCertResponse.ProtoReflect.Descriptor instead.
func (*GetDomainCertResponse) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{17}
}

func (x *GetDomainCertResponse) GetCertId() string {
	if x != nil {
		return x.CertId
	}
	return ""
}

func (x *GetDomainCertResponse) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetDomainCertResponse) GetCertificateDer() []byte {
	if x != nil {
		return x.CertificateDer
	}
	return nil
}

func (x *GetDomainCertResponse) GetRevocationChecks() bool {
	if x != nil {
		return x.RevocationChecks
	}
	return false
}

func (x *GetDomainCertResponse) GetExpiryTime() *timestamp.Timestamp {
	if x != nil {
		return x.ExpiryTime
	}
	return nil
}

type DeleteDomainCertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CertId string `protobuf:"bytes,1,opt,name=cert_id,json=certId,proto3" json:"cert_id,omitempty"`
}

func (x *DeleteDomainCertRequest) Reset() {
	*x = DeleteDomainCertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDomainCertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDomainCertRequest) ProtoMessage() {}

func (x *DeleteDomainCertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDomainCertRequest.ProtoReflect.Descriptor instead.
func (*DeleteDomainCertRequest) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteDomainCertRequest) GetCertId() string {
	if x != nil {
		return x.CertId
	}
	return ""
}

type DeleteDomainCertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteDomainCertResponse) Reset() {
	*x = DeleteDomainCertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDomainCertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDomainCertResponse) ProtoMessage() {}

func (x *DeleteDomainCertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDomainCertResponse.ProtoReflect.Descriptor instead.
func (*DeleteDomainCertResponse) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{19}
}

type AddSerialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Component *Component `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`
	GroupId   string     `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *AddSerialRequest) Reset() {
	*x = AddSerialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSerialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSerialRequest) ProtoMessage() {}

func (x *AddSerialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSerialRequest.ProtoReflect.Descriptor instead.
func (*AddSerialRequest) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{20}
}

func (x *AddSerialRequest) GetComponent() *Component {
	if x != nil {
		return x.Component
	}
	return nil
}

func (x *AddSerialRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type AddSerialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddSerialResponse) Reset() {
	*x = AddSerialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSerialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSerialResponse) ProtoMessage() {}

func (x *AddSerialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSerialResponse.ProtoReflect.Descriptor instead.
func (*AddSerialResponse) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{21}
}

type RemoveSerialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Component *Component `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`
	GroupId   string     `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *RemoveSerialRequest) Reset() {
	*x = RemoveSerialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSerialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSerialRequest) ProtoMessage() {}

func (x *RemoveSerialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSerialRequest.ProtoReflect.Descriptor instead.
func (*RemoveSerialRequest) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{22}
}

func (x *RemoveSerialRequest) GetComponent() *Component {
	if x != nil {
		return x.Component
	}
	return nil
}

func (x *RemoveSerialRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type RemoveSerialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveSerialResponse) Reset() {
	*x = RemoveSerialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSerialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSerialResponse) ProtoMessage() {}

func (x *RemoveSerialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSerialResponse.ProtoReflect.Descriptor instead.
func (*RemoveSerialResponse) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{23}
}

type GetSerialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Component *Component `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`
}

func (x *GetSerialRequest) Reset() {
	*x = GetSerialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSerialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSerialRequest) ProtoMessage() {}

func (x *GetSerialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSerialRequest.ProtoReflect.Descriptor instead.
func (*GetSerialRequest) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{24}
}

func (x *GetSerialRequest) GetComponent() *Component {
	if x != nil {
		return x.Component
	}
	return nil
}

type GetSerialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TPM's (if applicable) endorsement key in ASN.1 DER encoded format
	PublicKeyDer []byte `protobuf:"bytes,1,opt,name=public_key_der,json=publicKeyDer,proto3" json:"public_key_der,omitempty"`
	// List of groups the serial number belongs to.
	GroupIds []string `protobuf:"bytes,2,rep,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	// SKU mac address
	MacAddr string `protobuf:"bytes,3,opt,name=mac_addr,json=macAddr,proto3" json:"mac_addr,omitempty"`
	// SKU/Hardware model name
	Model string `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *GetSerialResponse) Reset() {
	*x = GetSerialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSerialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSerialResponse) ProtoMessage() {}

func (x *GetSerialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSerialResponse.ProtoReflect.Descriptor instead.
func (*GetSerialResponse) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{25}
}

func (x *GetSerialResponse) GetPublicKeyDer() []byte {
	if x != nil {
		return x.PublicKeyDer
	}
	return nil
}

func (x *GetSerialResponse) GetGroupIds() []string {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

func (x *GetSerialResponse) GetMacAddr() string {
	if x != nil {
		return x.MacAddr
	}
	return ""
}

func (x *GetSerialResponse) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

type GetOwnershipVoucherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Serial number for the part to fetch OV.
	Component *Component `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`
	// Certificate ID to use for OV.
	CertId string `protobuf:"bytes,2,opt,name=cert_id,json=certId,proto3" json:"cert_id,omitempty"`
	// Lifetime of the OV.
	Lifetime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=lifetime,proto3" json:"lifetime,omitempty"`
}

func (x *GetOwnershipVoucherRequest) Reset() {
	*x = GetOwnershipVoucherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOwnershipVoucherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOwnershipVoucherRequest) ProtoMessage() {}

func (x *GetOwnershipVoucherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOwnershipVoucherRequest.ProtoReflect.Descriptor instead.
func (*GetOwnershipVoucherRequest) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{26}
}

func (x *GetOwnershipVoucherRequest) GetComponent() *Component {
	if x != nil {
		return x.Component
	}
	return nil
}

func (x *GetOwnershipVoucherRequest) GetCertId() string {
	if x != nil {
		return x.CertId
	}
	return ""
}

func (x *GetOwnershipVoucherRequest) GetLifetime() *timestamp.Timestamp {
	if x != nil {
		return x.Lifetime
	}
	return nil
}

type GetOwnershipVoucherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Voucher in binary CMS format (rfc5652)
	VoucherCms []byte `protobuf:"bytes,1,opt,name=voucher_cms,json=voucherCms,proto3" json:"voucher_cms,omitempty"`
	// TPM's (if applicable) endorsement key in ASN.1 DER encoded format
	PublicKeyDer []byte `protobuf:"bytes,2,opt,name=public_key_der,json=publicKeyDer,proto3" json:"public_key_der,omitempty"`
}

func (x *GetOwnershipVoucherResponse) Reset() {
	*x = GetOwnershipVoucherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ovgs_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOwnershipVoucherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOwnershipVoucherResponse) ProtoMessage() {}

func (x *GetOwnershipVoucherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ovgs_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOwnershipVoucherResponse.ProtoReflect.Descriptor instead.
func (*GetOwnershipVoucherResponse) Descriptor() ([]byte, []int) {
	return file_ovgs_proto_rawDescGZIP(), []int{27}
}

func (x *GetOwnershipVoucherResponse) GetVoucherCms() []byte {
	if x != nil {
		return x.VoucherCms
	}
	return nil
}

func (x *GetOwnershipVoucherResponse) GetPublicKeyDer() []byte {
	if x != nil {
		return x.PublicKeyDer
	}
	return nil
}

var File_ovgs_proto protoreflect.FileDescriptor

var file_ovgs_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6f, 0x76, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6f, 0x76,
	0x67, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9c, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15,
	0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x42, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x69, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x4e, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x30, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0xeb, 0x01, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x65, 0x72,
	0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x65, 0x72,
	0x74, 0x49, 0x64, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a,
	0x0f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2f, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xc5, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6f, 0x76, 0x67,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x98,
	0x01, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x7a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22,
	0xa5, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x1a, 0x4c, 0x0a, 0x0b, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6f, 0x76, 0x67, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc7, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x44, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x76, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x72, 0x65, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x33, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x65, 0x72, 0x74, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x65, 0x72, 0x74, 0x49, 0x64, 0x22, 0xde, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x65, 0x72, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x44, 0x65, 0x72, 0x12, 0x2b,
	0x0a, 0x11, 0x72, 0x65, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x72, 0x65, 0x76, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x32, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x65, 0x72, 0x74, 0x49, 0x64, 0x22, 0x1a, 0x0a, 0x18,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5f, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x53,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x41, 0x64, 0x64,
	0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x62,
	0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x22, 0x87, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x44, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x63,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x63,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x9f, 0x01, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x56, 0x6f, 0x75, 0x63, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f,
	0x76, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63,
	0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x65,
	0x72, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x08, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x64, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x56, 0x6f, 0x75, 0x63,
	0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76,
	0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x63, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x43, 0x6d, 0x73, 0x12, 0x24, 0x0a, 0x0e,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x64, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x44,
	0x65, 0x72, 0x2a, 0x82, 0x01, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x19, 0x0a, 0x15, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x41,
	0x44, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52,
	0x4f, 0x4c, 0x45, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x52, 0x10, 0x03, 0x12, 0x17,
	0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x4f, 0x52, 0x10, 0x04, 0x2a, 0x64, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x41,
	0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56,
	0x49, 0x43, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x02, 0x32, 0x8e, 0x08,
	0x0a, 0x17, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x56, 0x6f, 0x75, 0x63, 0x68,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1b, 0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x1b, 0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x2e, 0x6f, 0x76, 0x67, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48,
	0x0a, 0x0b, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1b, 0x2e,
	0x6f, 0x76, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6f, 0x76, 0x67,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x6f, 0x76, 0x67,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6f, 0x76, 0x67,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x6f, 0x76, 0x67,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x53, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x12, 0x19, 0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x6f, 0x76, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x1c, 0x2e, 0x6f, 0x76, 0x67, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x12, 0x19, 0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x12, 0x20,
	0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x12, 0x20, 0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6f, 0x76, 0x67, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x12, 0x1d, 0x2e,
	0x6f, 0x76, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6f,
	0x76, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x56, 0x6f, 0x75, 0x63,
	0x68, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6f, 0x76, 0x67, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x56,
	0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x37,
	0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2f, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x2d, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x2d, 0x67, 0x72,
	0x70, 0x63, 0x2f, 0x6f, 0x76, 0x67, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ovgs_proto_rawDescOnce sync.Once
	file_ovgs_proto_rawDescData = file_ovgs_proto_rawDesc
)

func file_ovgs_proto_rawDescGZIP() []byte {
	file_ovgs_proto_rawDescOnce.Do(func() {
		file_ovgs_proto_rawDescData = protoimpl.X.CompressGZIP(file_ovgs_proto_rawDescData)
	})
	return file_ovgs_proto_rawDescData
}

var file_ovgs_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_ovgs_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_ovgs_proto_goTypes = []interface{}{
	(UserRole)(0),                       // 0: ovgs.v1.UserRole
	(AccountType)(0),                    // 1: ovgs.v1.AccountType
	(*User)(nil),                        // 2: ovgs.v1.User
	(*Component)(nil),                   // 3: ovgs.v1.Component
	(*CreateGroupRequest)(nil),          // 4: ovgs.v1.CreateGroupRequest
	(*CreateGroupResponse)(nil),         // 5: ovgs.v1.CreateGroupResponse
	(*GetGroupRequest)(nil),             // 6: ovgs.v1.GetGroupRequest
	(*GetGroupResponse)(nil),            // 7: ovgs.v1.GetGroupResponse
	(*DeleteGroupRequest)(nil),          // 8: ovgs.v1.DeleteGroupRequest
	(*DeleteGroupResponse)(nil),         // 9: ovgs.v1.DeleteGroupResponse
	(*AddUserRoleRequest)(nil),          // 10: ovgs.v1.AddUserRoleRequest
	(*AddUserRoleResponse)(nil),         // 11: ovgs.v1.AddUserRoleResponse
	(*RemoveUserRoleRequest)(nil),       // 12: ovgs.v1.RemoveUserRoleRequest
	(*RemoveUserRoleResponse)(nil),      // 13: ovgs.v1.RemoveUserRoleResponse
	(*GetUserRoleRequest)(nil),          // 14: ovgs.v1.GetUserRoleRequest
	(*GetUserRoleResponse)(nil),         // 15: ovgs.v1.GetUserRoleResponse
	(*CreateDomainCertRequest)(nil),     // 16: ovgs.v1.CreateDomainCertRequest
	(*CreateDomainCertResponse)(nil),    // 17: ovgs.v1.CreateDomainCertResponse
	(*GetDomainCertRequest)(nil),        // 18: ovgs.v1.GetDomainCertRequest
	(*GetDomainCertResponse)(nil),       // 19: ovgs.v1.GetDomainCertResponse
	(*DeleteDomainCertRequest)(nil),     // 20: ovgs.v1.DeleteDomainCertRequest
	(*DeleteDomainCertResponse)(nil),    // 21: ovgs.v1.DeleteDomainCertResponse
	(*AddSerialRequest)(nil),            // 22: ovgs.v1.AddSerialRequest
	(*AddSerialResponse)(nil),           // 23: ovgs.v1.AddSerialResponse
	(*RemoveSerialRequest)(nil),         // 24: ovgs.v1.RemoveSerialRequest
	(*RemoveSerialResponse)(nil),        // 25: ovgs.v1.RemoveSerialResponse
	(*GetSerialRequest)(nil),            // 26: ovgs.v1.GetSerialRequest
	(*GetSerialResponse)(nil),           // 27: ovgs.v1.GetSerialResponse
	(*GetOwnershipVoucherRequest)(nil),  // 28: ovgs.v1.GetOwnershipVoucherRequest
	(*GetOwnershipVoucherResponse)(nil), // 29: ovgs.v1.GetOwnershipVoucherResponse
	nil,                                 // 30: ovgs.v1.GetUserRoleResponse.GroupsEntry
	(*timestamp.Timestamp)(nil),         // 31: google.protobuf.Timestamp
}
var file_ovgs_proto_depIdxs = []int32{
	1,  // 0: ovgs.v1.User.user_type:type_name -> ovgs.v1.AccountType
	0,  // 1: ovgs.v1.User.user_role:type_name -> ovgs.v1.UserRole
	3,  // 2: ovgs.v1.GetGroupResponse.components:type_name -> ovgs.v1.Component
	2,  // 3: ovgs.v1.GetGroupResponse.users:type_name -> ovgs.v1.User
	1,  // 4: ovgs.v1.AddUserRoleRequest.user_type:type_name -> ovgs.v1.AccountType
	0,  // 5: ovgs.v1.AddUserRoleRequest.user_role:type_name -> ovgs.v1.UserRole
	1,  // 6: ovgs.v1.RemoveUserRoleRequest.user_type:type_name -> ovgs.v1.AccountType
	1,  // 7: ovgs.v1.GetUserRoleRequest.user_type:type_name -> ovgs.v1.AccountType
	30, // 8: ovgs.v1.GetUserRoleResponse.groups:type_name -> ovgs.v1.GetUserRoleResponse.GroupsEntry
	31, // 9: ovgs.v1.CreateDomainCertRequest.expiry_time:type_name -> google.protobuf.Timestamp
	31, // 10: ovgs.v1.GetDomainCertResponse.expiry_time:type_name -> google.protobuf.Timestamp
	3,  // 11: ovgs.v1.AddSerialRequest.component:type_name -> ovgs.v1.Component
	3,  // 12: ovgs.v1.RemoveSerialRequest.component:type_name -> ovgs.v1.Component
	3,  // 13: ovgs.v1.GetSerialRequest.component:type_name -> ovgs.v1.Component
	3,  // 14: ovgs.v1.GetOwnershipVoucherRequest.component:type_name -> ovgs.v1.Component
	31, // 15: ovgs.v1.GetOwnershipVoucherRequest.lifetime:type_name -> google.protobuf.Timestamp
	0,  // 16: ovgs.v1.GetUserRoleResponse.GroupsEntry.value:type_name -> ovgs.v1.UserRole
	4,  // 17: ovgs.v1.OwnershipVoucherService.CreateGroup:input_type -> ovgs.v1.CreateGroupRequest
	8,  // 18: ovgs.v1.OwnershipVoucherService.DeleteGroup:input_type -> ovgs.v1.DeleteGroupRequest
	6,  // 19: ovgs.v1.OwnershipVoucherService.GetGroup:input_type -> ovgs.v1.GetGroupRequest
	10, // 20: ovgs.v1.OwnershipVoucherService.AddUserRole:input_type -> ovgs.v1.AddUserRoleRequest
	12, // 21: ovgs.v1.OwnershipVoucherService.RemoveUserRole:input_type -> ovgs.v1.RemoveUserRoleRequest
	14, // 22: ovgs.v1.OwnershipVoucherService.GetUserRole:input_type -> ovgs.v1.GetUserRoleRequest
	22, // 23: ovgs.v1.OwnershipVoucherService.AddSerial:input_type -> ovgs.v1.AddSerialRequest
	24, // 24: ovgs.v1.OwnershipVoucherService.RemoveSerial:input_type -> ovgs.v1.RemoveSerialRequest
	26, // 25: ovgs.v1.OwnershipVoucherService.GetSerial:input_type -> ovgs.v1.GetSerialRequest
	16, // 26: ovgs.v1.OwnershipVoucherService.CreateDomainCert:input_type -> ovgs.v1.CreateDomainCertRequest
	20, // 27: ovgs.v1.OwnershipVoucherService.DeleteDomainCert:input_type -> ovgs.v1.DeleteDomainCertRequest
	18, // 28: ovgs.v1.OwnershipVoucherService.GetDomainCert:input_type -> ovgs.v1.GetDomainCertRequest
	28, // 29: ovgs.v1.OwnershipVoucherService.GetOwnershipVoucher:input_type -> ovgs.v1.GetOwnershipVoucherRequest
	5,  // 30: ovgs.v1.OwnershipVoucherService.CreateGroup:output_type -> ovgs.v1.CreateGroupResponse
	9,  // 31: ovgs.v1.OwnershipVoucherService.DeleteGroup:output_type -> ovgs.v1.DeleteGroupResponse
	7,  // 32: ovgs.v1.OwnershipVoucherService.GetGroup:output_type -> ovgs.v1.GetGroupResponse
	11, // 33: ovgs.v1.OwnershipVoucherService.AddUserRole:output_type -> ovgs.v1.AddUserRoleResponse
	13, // 34: ovgs.v1.OwnershipVoucherService.RemoveUserRole:output_type -> ovgs.v1.RemoveUserRoleResponse
	15, // 35: ovgs.v1.OwnershipVoucherService.GetUserRole:output_type -> ovgs.v1.GetUserRoleResponse
	23, // 36: ovgs.v1.OwnershipVoucherService.AddSerial:output_type -> ovgs.v1.AddSerialResponse
	25, // 37: ovgs.v1.OwnershipVoucherService.RemoveSerial:output_type -> ovgs.v1.RemoveSerialResponse
	27, // 38: ovgs.v1.OwnershipVoucherService.GetSerial:output_type -> ovgs.v1.GetSerialResponse
	17, // 39: ovgs.v1.OwnershipVoucherService.CreateDomainCert:output_type -> ovgs.v1.CreateDomainCertResponse
	21, // 40: ovgs.v1.OwnershipVoucherService.DeleteDomainCert:output_type -> ovgs.v1.DeleteDomainCertResponse
	19, // 41: ovgs.v1.OwnershipVoucherService.GetDomainCert:output_type -> ovgs.v1.GetDomainCertResponse
	29, // 42: ovgs.v1.OwnershipVoucherService.GetOwnershipVoucher:output_type -> ovgs.v1.GetOwnershipVoucherResponse
	30, // [30:43] is the sub-list for method output_type
	17, // [17:30] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_ovgs_proto_init() }
func file_ovgs_proto_init() {
	if File_ovgs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ovgs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Component); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveUserRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveUserRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDomainCertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDomainCertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDomainCertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDomainCertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDomainCertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDomainCertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSerialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSerialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveSerialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveSerialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSerialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSerialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOwnershipVoucherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ovgs_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOwnershipVoucherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ovgs_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ovgs_proto_goTypes,
		DependencyIndexes: file_ovgs_proto_depIdxs,
		EnumInfos:         file_ovgs_proto_enumTypes,
		MessageInfos:      file_ovgs_proto_msgTypes,
	}.Build()
	File_ovgs_proto = out.File
	file_ovgs_proto_rawDesc = nil
	file_ovgs_proto_goTypes = nil
	file_ovgs_proto_depIdxs = nil
}
